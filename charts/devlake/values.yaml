#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# replica count for dev
replicaCount: 1
imageTag: v0.16.0-beta17

mysql:
  # if use external mysql server, please set true
  #   by default using false, chart will create a single mysql instance
  useExternal: false

  # the external mysql server address
  externalServer: 127.0.0.1

  # external mysql port
  externalPort: 3306

  # the username for devlake database
  username: merico

  # the password for devlake database
  password: merico

  # the database for devlake
  database: lake

  # root password for mysql, only used when use_external=true
  rootPassword: admin

  # storage for mysql
  storage:
    # the storage class for pv, leave empty will using default
    class: ""
    size: 50Gi

  # image for mysql
  image:
    repository: mysql
    tag: 8
    pullPolicy: IfNotPresent

  # resources config for mysql if have
  resources: {}

  # nodeSelector config for mysql if have
  nodeSelector: {}

  # tolerations config for mysql if have
  tolerations: []

  # affinity config for mysql if have
  affinity: {}

# pgsql:
#   # if use external pgsql server, please set true
#   #   by default using false, chart will create a single pgsql instance
#   useExternal: false

#   # the external pgsql server address
#   externalServer: 127.0.0.1

#   # external pgsql port
#   externalPort: 5432

#   # the username for devlake database
#   username: merico

#   # the password for devlake database
#   password: merico

#   # the database for devlake
#   database: lake

#   # storage for pgsql
#   storage:
#     # the storage class for pv, leave empty will using default
#     class: ""
#     size: 5Gi

#   # image for pgsql
#   image:
#     repository: postgres
#     tag: 14.5
#     pullPolicy: IfNotPresent

#   # resources config for pgsql if have
#   resources: {}

#   # nodeSelector config for pgsql if have
#   nodeSelector: {}

#   # tolerations config for pgsql if have
#   tolerations: []

#   # affinity config for pgsql if have
#   affinity: {}

grafana:
  # image for grafana
  image:
    repository: apache/devlake-dashboard
    pullPolicy: Always

  # If true, the default Nginx configuration will support a permanent redirect
  # in the tool's menu. Should you use a different ingress controller, you'll need
  # to add the ingress with the permanent redirect.
  useExternal: false

  externalUrl: ""

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  # Enable creating the grafana configmap, which contains grafana.ini config
  createConfigmap: false

grafana.ini:
  # # grafana Authentication can be enabled with the following values on grafana.ini
  # auth:
  #   disable_login_form: false
  # auth.basic:
  #   enabled: true
  # auth.generic_oauth:
  #   allow_assign_grafana_admin: true
  #   allow_sign_up: true
  #   api_url: https://devlake-test.auth.us-east-2.amazoncognito.com/oauth2/userInfo
  #   auth_url: https://devlake-test.auth.us-east-2.amazoncognito.com/oauth2/authorize
  #   auto_login: true
  #   client_id: 4h8b5ttj0ng50oueqbc5ndal5g
  #   enabled: true
  #   name: OAuth
  #   role_attribute_path: ("cognito:groups" | contains([*], 'Admin') && 'GrafanaAdmin'
  #     || 'Viewer')
  #   scopes: email profile aws.cognito.signin.user.admin openid
  #   signout_redirect_url: https://devlake-test.auth.us-east-2.amazoncognito.com/logout?client_id=4h8b5ttj0ng50oueqbc5ndal5g&logout_uri=http://localhost:4000/grafana/login
  #   token_url: https://devlake-test.auth.us-east-2.amazoncognito.com/oauth2/token
  # server:
  #   root_url: http://localhost:4000
 
lake:
  image:
    repository: apache/devlake
    pullPolicy: Always
  # storage for config
  storage:
    # the storage class for pv, leave empty will using default
    class: ""
    size: 100Mi
  dotenv:
    API_TIMEOUT: "120s"
    API_RETRY: "3"
    API_REQUESTS_PER_HOUR: "10000"
    PIPELINE_MAX_PARALLEL: "1"
    IN_SECURE_SKIP_VERIFY: "false"

  # If hostNetwork is true, then dnsPolicy is set to ClusterFirstWithHostNet
  hostNetwork: false

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  loggingDir: "/app/logs"
  # debug, info, warn, error
  loggingLevel: "info"

ui:
  image:
    repository: apache/devlake-config-ui
    pullPolicy: Always

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  basicAuth:
    enabled: false
    user: admin
    password: admin
  
  cognitoAuth:
    # by default, AWS Cognito auth is disabled.
    # if enabled, please set the following 4 commented variables.
    enabled: false
    # region: 
    # user_pool_id:
    # user_pool_web_client_id:
    # cookie_storage_domain:

# alpine image for some init containers
alpine:
  image:
    repository: alpine
    tag: 3.16
    pullPolicy: IfNotPresent

service:
  # service type: NodePort/ClusterIP
  type: NodePort
  # node port for devlake-ui if NodePort is enabled
  uiPort: 32001
  grafanaPort: 32002

ingress:
  enabled: false
  enableHttps: false
  className: ""
  # Set to false if you want to use a different ingress controller
  useDefaultNginx: true
  # Add annotations required for your ingress controller. Uncomment for Nginx.
  # ingress class name, example: alb
  className:
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
    #   { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:xxx:certificate/xxx
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
  # domain name for hosting devlake
  hostname: localhost
  # url prefix, not works right now, keep "/"
  prefix: /
  # if using https provides the certificates secret name
  tlsSecretName: ""
  # ingress http port
  httpPort: 80
  # ingress https port
  httpsPort: 443

option:
  # localtime zone info from host path.
  localtime: /etc/localtime

  # database type, supported: [mysql]
  database: mysql
