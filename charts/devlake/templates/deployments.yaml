#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
{{- if not .Values.grafana.useExternal }}
# grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "devlake.fullname" . }}-grafana
  labels:
    {{- include "devlake.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "devlake.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "devlake.selectorLabels" . | nindent 8 }}
        devlakeComponent: grafana
        {{- with .Values.grafana.extraLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.grafana.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "common.initContainerWaitDatabase" . | nindent 8 }}
          {{- with .Values.grafana.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: {{ include "devlake.fullname" . }}-grafana-datasource-config
              mountPath: /etc/grafana/provisioning/datasources/datasource.yml
              subPath: grafana-datasource.yml
          envFrom:
            {{- if .Values.grafana.oauthEnabled }}
            - configMapRef:
                name: {{ include "devlake.fullname" . }}-grafana-oauth-config
            {{- end }}
            - secretRef:
                name: {{ include "devlake.mysql.secret" . }}
          env:
            {{ if not .Values.grafana.oauthEnabled }}
            - name: GF_SERVER_ROOT_URL
              value: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
            {{ end }}
            - name: MYSQL_URL
              value: {{ include "mysql.server" . }}:{{ include "mysql.port" . }}
            {{- with .Values.envs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.grafana.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.grafana.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.grafana.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.grafana.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.grafana.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "devlake.fullname" . }}-grafana-datasource-config
          configMap:
            name: {{ include "devlake.fullname" . }}-grafana-datasource
{{ end }}
---
# devlake-ui
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "devlake.fullname" . }}-ui
  labels:
    {{- include "devlake.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "devlake.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "devlake.selectorLabels" . | nindent 8 }}
        devlakeComponent: ui
        {{- with .Values.ui.extraLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.ui.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: config-ui
{{- if .Values.ui.image.tag }}
          image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
{{- else }}
          image: "{{ .Values.ui.image.repository }}:{{ .Values.imageTag }}"
{{- end }}
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          ports:
            - containerPort: 4000
          {{- if .Values.ui.basicAuth.enabled }}
          envFrom:
            - secretRef:
                name: {{ include "devlake.ui.auth.secret" . }}
          {{- end }}
          env:
            - name: DEVLAKE_ENDPOINT
              # TODO: remove hardcoded `cluster.local`
              value: "{{ include "devlake.fullname" . }}-lake.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.lake.port }}"
{{- if .Values.grafana.useExternal }}
            - name: GRAFANA_ENDPOINT
              value: {{ .Values.grafana.externalUrl }}
            - name: USE_EXTERNAL_GRAFANA
              value: "true"
{{- else }}
            - name: GRAFANA_ENDPOINT
              value: {{ include "devlake.fullname" . }}-grafana.{{ .Release.Namespace }}.svc.cluster.local:3000
{{- end }}
            {{- with .Values.envs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.ui.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.ui.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.ui.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ui.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ui.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
# devlake
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "devlake.fullname" . }}-lake
  labels:
  {{- include "devlake.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
  {{- include "devlake.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "devlake.selectorLabels" . | nindent 8 }}
        devlakeComponent: lake
        {{- with .Values.lake.extraLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
        # Force reload on config changes
        checksum/devlake-config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
    spec:
      {{- with .Values.lake.securityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "common.initContainerWaitDatabase" . | nindent 8 }}
        {{- with .Values.lake.containerSecurityContext }}
        securityContext:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      containers:
        - name: lake
          {{- if .Values.lake.image.tag }}
          image: "{{ .Values.lake.image.repository }}:{{ .Values.lake.image.tag }}"
          {{- else }}
          image: "{{ .Values.lake.image.repository }}:{{ .Values.imageTag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.lake.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.lake.port }}
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.lake.port }}
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 30
          envFrom:
            - secretRef:
                name: {{ include "devlake.mysql.secret" . }}
            - secretRef:
                name: {{ include "devlake.lake.encryption.secret" . }}
            {{- if .Values.awsCognitoAuth.enabled }}
            - configMapRef:
                name: {{ include "devlake.fullname" . }}-cognito-config
          {{- end }}
          env:
            - name: PORT
              value: "{{ .Values.lake.port }}"
            {{- with .Values.lake.envs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.envs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.lake.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.lake.containerSecurityContext }}
          securityContext:
          {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- if .Values.lake.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- with .Values.lake.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.lake.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.lake.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
  {{- end }}


