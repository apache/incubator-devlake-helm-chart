#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "devlake.fullname" . }}-config
data:
{{- if eq .Values.option.database "mysql" }}
  MYSQL_USER: "{{ .Values.mysql.username }}"
  MYSQL_PASSWORD: "{{ .Values.mysql.password }}"
  MYSQL_DATABASE: "{{ .Values.mysql.database }}"
  MYSQL_ROOT_PASSWORD: "{{ .Values.mysql.rootPassword }}"
#{{- else if eq .Values.option.database "pgsql" }}
#  POSTGRES_USER: "{{ .Values.pgsql.username }}"
#  POSTGRES_PASSWORD: "{{ .Values.pgsql.password }}"
#  POSTGRES_DB: "{{ .Values.pgsql.database }}"
{{- end }}
  LOGGING_DIR: "{{ .Values.lake.loggingDir }}"
  LOGGING_LEVEL: "{{ .Values.lake.loggingLevel }}"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "devlake.fullname" . }}-nginx-conf
data:
  default.conf.tpl: |
    server {
      listen 4000;
      server_name localhost;
    ${SERVER_CONF}

      location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
      }

      location /api/ {
        resolver ${DNS} valid=${DNS_VALID};
        resolver_timeout 3s;
        set $target "${DEVLAKE_ENDPOINT}";
        rewrite /api/(.*) /$1  break;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        proxy_pass http://$target;
      }
{{- if .Values.grafana.useExternal }}
      location /grafana/ {
        return 302 ${GRAFANA_ENDPOINT};
      }
{{- else }}
      location /grafana/ {
        resolver ${DNS} valid=${DNS_VALID};
        resolver_timeout 3s;
        set $target "${GRAFANA_ENDPOINT}";
        rewrite /grafana/(.*) /$1  break;
        proxy_set_header Authorization "";
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        proxy_pass http://$target;
      }
{{- end }}
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "devlake.fullname" . }}-grafana-datasource
data:
  grafana-datasource.yml: |
    apiVersion: 1
    datasources:
      - name: mysql
        type: mysql
        url: $MYSQL_URL
        database: $MYSQL_DATABASE
        user: $MYSQL_USER
        secureJsonData:
          password: $MYSQL_PASSWORD
        editable: false
#{{- else if eq .Values.option.database "pgsql" }}
#  grafana-datasource.yml: |
#    apiVersion: 1
#    datasources:
#      - name: postgres
#        type: postgres
#        url: $POSTGRES_URL
#        database: $POSTGRES_DB
#        user: $POSTGRES_USER
#        secureJsonData:
#          password: $POSTGRES_PASSWORD
#        jsonData:
#          sslmode: 'disable'
#          postgresVersion: 1000 # support pgsql 10.0 and above
#          timescaledb: false
{{- end }}
{{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "devlake.fullname" . }}-grafana
data:
  grafana.ini: |
  {{- range $elem, $elemVal := index .Values "grafana.ini" }}
    {{- if not (kindIs "map" $elemVal) }}
    {{- if kindIs "invalid" $elemVal }}
    {{ $elem }} =
    {{- else if kindIs "string" $elemVal }}
    {{ $elem }} = {{ tpl $elemVal $ }}
    {{- else }}
    {{ $elem }} = {{ $elemVal }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- range $key, $value := index .Values "grafana.ini" }}
    {{- if kindIs "map" $value }}
    [{{ $key }}]
    {{- range $elem, $elemVal := $value }}
    {{- if kindIs "invalid" $elemVal }}
    {{ $elem }} =
    {{- else if kindIs "string" $elemVal }}
    {{ $elem }} = {{ tpl $elemVal $ }}
    {{- else }}
    {{ $elem }} = {{ $elemVal }}
    {{- end }}
    {{- end }}
    {{- end }}
  {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "devlake.fullname" . }}-ui-config
data:
  VITE_AUTH_REGION: "{{ .Values.ui.env.VITE_AUTH_REGION }}"
  VITE_AUTH_USER_POOL_ID: "{{ .Values.ui.env.VITE_AUTH_USER_POOL_ID }}"
  VITE_AUTH_USER_POOL_WEB_CLIENT_ID: "{{ .Values.ui.env.VITE_AUTH_USER_POOL_WEB_CLIENT_ID }}"
  VITE_AUTH_COOKIE_STORAGE_DOMAIN: "{{ .Values.ui.env.VITE_AUTH_COOKIE_STORAGE_DOMAIN }}"
  {{ - if .Values.ui.basicAuth.enabled }}
  ADMIN_USER: "{{ .Values.ui.basicAuth.user }}"
  ADMIN_PASS: "{{ .Values.ui.basicAuth.password }}"
  {{ - end }}
